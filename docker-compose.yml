services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5

  mongo:
    image: mongo:6
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  backend:
    container_name: backend
    image: backend:latest
    build:
      context: ./backend
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_started
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      MONGO_URI: ${MONGO_URI}
      JWT_KEY: ${JWT_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
      JWT_EXPIRE_MINUTES: ${JWT_EXPIRE_MINUTES}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
    ports:
      - "5000:5000"
    volumes:
      - ./backend/Data/Seed:/app/Data/Seed

volumes:
  pgdata:
  mongodata:
